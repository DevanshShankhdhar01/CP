
//______SPARSE TABLE_____________________________________________________________________________________________________________________________________________

#include <bits/stdc++.h>
using namespace std;

struct SparseTable {
    vector<vector<int>> st;
    vector<int> log2;

    SparseTable(const vector<int>& arr) {
        int n = arr.size();
        int K = log2_floor(n) + 1;
        
        log2.resize(n + 1);
        for (int i = 2; i <= n; i++) log2[i] = log2[i / 2] + 1;

        st.assign(n, vector<int>(K));
        for (int i = 0; i < n; i++) st[i][0] = arr[i];

        for (int j = 1; (1 << j) <= n; j++) {
            for (int i = 0; i + (1 << j) <= n; i++) {
                st[i][j] = min(st[i][j - 1], st[i + (1 << (j - 1))][j - 1]);
            }
        }
    }

    int query(int L, int R) {
        int j = log2[R - L + 1];
        return min(st[L][j], st[R - (1 << j) + 1][j]);
    }

    int log2_floor(int x) {
        return 31 - __builtin_clz(x);
    }
};

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);

    vector<int> arr = {1, 3, 2, 7, 9, 11, 3, 5, 8, 10};
    SparseTable st(arr);

    cout << st.query(0, 5) << "\n";  // Min in range [0,5] -> 1
    cout << st.query(3, 7) << "\n";  // Min in range [3,7] -> 3
    cout << st.query(4, 9) << "\n";  // Min in range [4,9] -> 3

    return 0;
}
// To calculate min, max, gcd, and ,or of a range from L to R in a static array i.e 
an array not changing between operation

//_________________________________________________________________________________________________________________________________________________
